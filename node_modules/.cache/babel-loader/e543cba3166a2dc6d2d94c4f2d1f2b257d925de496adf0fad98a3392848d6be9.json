{"ast":null,"code":"var _jsxFileName = \"D:\\\\RSS\\\\test\\\\src\\\\count.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Button() {\n  _s();\n  const [count, setCount] = useState(0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count => count + 1),\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      children: \"ENTER\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Button, \"RpyMek13f3iNeQO0Gs9DEYmHKoY=\");\n_c = Button;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["useState","React","jsxDEV","_jsxDEV","Fragment","_Fragment","Button","_s","count","setCount","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["D:/RSS/test/src/count.js"],"sourcesContent":["import {useState} from 'react'\r\nimport React from 'react';\r\nfunction Button(){\r\n  const[count,setCount]= useState(0);\r\n  return(\r\n    <>\r\n    <button onClick={() => setCount(count=>(count+1))}>\r\n      <strong>{count}</strong>\r\n      </button>\r\n        <input type='text'>ENTER</input>\r\n    </>\r\n\r\n  );\r\n  \r\n  \r\n}\r\nexport default Button;"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAC1B,SAASC,MAAMA,CAAA,EAAE;EAAAC,EAAA;EACf,MAAK,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAET,QAAQ,CAAC,CAAC,CAAC;EAClC,oBACEG,OAAA,CAAAE,SAAA;IAAAK,QAAA,gBACAP,OAAA;MAAQQ,OAAO,EAAEA,CAAA,KAAMF,QAAQ,CAACD,KAAK,IAAGA,KAAK,GAAC,CAAE,CAAE;MAAAE,QAAA,eAChDP,OAAA;QAAAO,QAAA,EAASF;MAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eACPZ,OAAA;MAAOa,IAAI,EAAC,MAAM;MAAAN,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA,eAClC,CAAC;AAKP;AAACR,EAAA,CAbQD,MAAM;AAAAW,EAAA,GAANX,MAAM;AAcf,eAAeA,MAAM;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}