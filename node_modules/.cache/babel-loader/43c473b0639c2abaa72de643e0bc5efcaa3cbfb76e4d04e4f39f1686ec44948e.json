{"ast":null,"code":"var _jsxFileName = \"D:\\\\RSS\\\\test\\\\src\\\\count.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Button() {\n  _s();\n  const [count, setCount] = useState(0);\n  com;\n  const [title, setTitle] = useState();\n  console[(id, setId)] = useState();\n  const products = [{\n    title: \"A\",\n    id: 1\n  }, {\n    title: \"B\",\n    id: 2\n  }, {\n    title: \"C\",\n    id: 3\n  }];\n  const list = products.map(products => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: products.title\n  }, products.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count => count + 1),\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter title\",\n      value: title,\n      onChange: handleTitleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter ID\",\n      value: id,\n      onChange: handleIdChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddItem,\n      children: \"Add Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Button, \"EGP0eHB5t4oEHN82k/iVpDA++qY=\");\n_c = Button;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Button","_s","count","setCount","com","title","setTitle","console","id","setId","products","list","map","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","handleTitleChange","handleIdChange","handleAddItem","_c","$RefreshReg$"],"sources":["D:/RSS/test/src/count.js"],"sourcesContent":["import React , {useState} from 'react'\r\n\r\nfunction Button(){\r\n  const[count,setCount]= useState(0);\r\n  com\r\n  const[title,setTitle] = useState();\r\n  console[id,setId] = useState();\r\n  const products = [\r\n    { title: \"A\" , id:1},\r\n    { title: \"B\" , id:2},\r\n    { title: \"C\", id:3},\r\n  ];\r\n  const list = products.map( products =>\r\n    <li key = {products.id}>\r\n    {products.title}\r\n    </li>\r\n    );\r\n  return(\r\n    <>\r\n    <button onClick={() => setCount(count=>(count+1))}>\r\n      <strong>{count}</strong>\r\n      </button>\r\n      <input\r\n          type=\"text\"\r\n          placeholder=\"Enter title\"\r\n          value={title}\r\n          onChange={handleTitleChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter ID\"\r\n          value={id}\r\n          onChange={handleIdChange}\r\n        />\r\n        <button onClick={handleAddItem}>Add Item</button>\r\n        \r\n        <ul>{list}</ul>\r\n    </>\r\n  );\r\n  \r\n  \r\n}\r\nexport default Button;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtC,SAASC,MAAMA,CAAA,EAAE;EAAAC,EAAA;EACf,MAAK,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAER,QAAQ,CAAC,CAAC,CAAC;EAClCS,GAAG;EACH,MAAK,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,CAAC;EAClCY,OAAO,EAACC,EAAE,EAACC,KAAK,EAAC,GAAGd,QAAQ,CAAC,CAAC;EAC9B,MAAMe,QAAQ,GAAG,CACf;IAAEL,KAAK,EAAE,GAAG;IAAGG,EAAE,EAAC;EAAC,CAAC,EACpB;IAAEH,KAAK,EAAE,GAAG;IAAGG,EAAE,EAAC;EAAC,CAAC,EACpB;IAAEH,KAAK,EAAE,GAAG;IAAEG,EAAE,EAAC;EAAC,CAAC,CACpB;EACD,MAAMG,IAAI,GAAGD,QAAQ,CAACE,GAAG,CAAEF,QAAQ,iBACjCb,OAAA;IAAAgB,QAAA,EACCH,QAAQ,CAACL;EAAK,GADJK,QAAQ,CAACF,EAAE;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAElB,CACJ,CAAC;EACH,oBACEpB,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACAhB,OAAA;MAAQqB,OAAO,EAAEA,CAAA,KAAMf,QAAQ,CAACD,KAAK,IAAGA,KAAK,GAAC,CAAE,CAAE;MAAAW,QAAA,eAChDhB,OAAA;QAAAgB,QAAA,EAASX;MAAK;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eACTpB,OAAA;MACIsB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,aAAa;MACzBC,KAAK,EAAEhB,KAAM;MACbiB,QAAQ,EAAEC;IAAkB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACFpB,OAAA;MACEsB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEb,EAAG;MACVc,QAAQ,EAAEE;IAAe;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACFpB,OAAA;MAAQqB,OAAO,EAAEO,aAAc;MAAAZ,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEjDpB,OAAA;MAAAgB,QAAA,EAAKF;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA,eACjB,CAAC;AAIP;AAAChB,EAAA,CAvCQD,MAAM;AAAA0B,EAAA,GAAN1B,MAAM;AAwCf,eAAeA,MAAM;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}